// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`BPMEngine Can not instantiate a new processInstance with an invalid workflowDefinition 1`] = `
[Error: unparsable content detected
	line: 0
	column: 0
	nested error: missing start tag]
`;

exports[`BPMEngine Can not instantiate a new processInstance without a workflowDefinition 1`] = `[Error: Invalid WorkflowDefinition]`;

exports[`BPMEngine Deploys a valid workflow definition with a custom id 1`] = `
Object {
  "workflowDefinitionId": "test",
  "xml": "<?xml version=\\"1.0\\" encoding=\\"UTF-8\\"?>
<bpmn:definitions xmlns:bpmn=\\"http://www.omg.org/spec/BPMN/20100524/MODEL\\" xmlns:bpmndi=\\"http://www.omg.org/spec/BPMN/20100524/DI\\" xmlns:di=\\"http://www.omg.org/spec/DD/20100524/DI\\" xmlns:dc=\\"http://www.omg.org/spec/DD/20100524/DC\\" xmlns:xsi=\\"http://www.w3.org/2001/XMLSchema-instance\\" id=\\"Definitions_1\\" targetNamespace=\\"http://bpmn.io/schema/bpmn\\" exporter=\\"Camunda Modeler\\" exporterVersion=\\"1.10.0\\">
  <bpmn:process id=\\"Process_1\\" isExecutable=\\"true\\">
    <bpmn:startEvent id=\\"StartEvent_1\\" name=\\"Start\\">
      <bpmn:outgoing>SequenceFlow_00jvsas</bpmn:outgoing>
    </bpmn:startEvent>
    <bpmn:sequenceFlow id=\\"SequenceFlow_00jvsas\\" sourceRef=\\"StartEvent_1\\" targetRef=\\"Task_123acd6\\" />
    <bpmn:endEvent id=\\"EndEvent_1dwx5c0\\" name=\\"End\\">
      <bpmn:incoming>SequenceFlow_0xem89z</bpmn:incoming>
    </bpmn:endEvent>
    <bpmn:sequenceFlow id=\\"SequenceFlow_0xem89z\\" sourceRef=\\"Task_123acd6\\" targetRef=\\"EndEvent_1dwx5c0\\" />
    <bpmn:userTask id=\\"Task_123acd6\\" name=\\"Task\\">
      <bpmn:incoming>SequenceFlow_00jvsas</bpmn:incoming>
      <bpmn:outgoing>SequenceFlow_0xem89z</bpmn:outgoing>
    </bpmn:userTask>
  </bpmn:process>
  <bpmndi:BPMNDiagram id=\\"BPMNDiagram_1\\">
    <bpmndi:BPMNPlane id=\\"BPMNPlane_1\\" bpmnElement=\\"Process_1\\">
      <bpmndi:BPMNShape id=\\"_BPMNShape_StartEvent_2\\" bpmnElement=\\"StartEvent_1\\">
        <dc:Bounds x=\\"463\\" y=\\"329\\" width=\\"36\\" height=\\"36\\" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x=\\"469\\" y=\\"365\\" width=\\"24\\" height=\\"12\\" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id=\\"SequenceFlow_00jvsas_di\\" bpmnElement=\\"SequenceFlow_00jvsas\\">
        <di:waypoint xsi:type=\\"dc:Point\\" x=\\"499\\" y=\\"347\\" />
        <di:waypoint xsi:type=\\"dc:Point\\" x=\\"529\\" y=\\"347\\" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x=\\"514\\" y=\\"325.5\\" width=\\"0\\" height=\\"13\\" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id=\\"EndEvent_1dwx5c0_di\\" bpmnElement=\\"EndEvent_1dwx5c0\\">
        <dc:Bounds x=\\"663\\" y=\\"329\\" width=\\"36\\" height=\\"36\\" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x=\\"671\\" y=\\"368\\" width=\\"20\\" height=\\"12\\" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNShape>
      <bpmndi:BPMNEdge id=\\"SequenceFlow_0xem89z_di\\" bpmnElement=\\"SequenceFlow_0xem89z\\">
        <di:waypoint xsi:type=\\"dc:Point\\" x=\\"629\\" y=\\"347\\" />
        <di:waypoint xsi:type=\\"dc:Point\\" x=\\"663\\" y=\\"347\\" />
        <bpmndi:BPMNLabel>
          <dc:Bounds x=\\"646\\" y=\\"325.5\\" width=\\"0\\" height=\\"13\\" />
        </bpmndi:BPMNLabel>
      </bpmndi:BPMNEdge>
      <bpmndi:BPMNShape id=\\"UserTask_0vco0x6_di\\" bpmnElement=\\"Task_123acd6\\">
        <dc:Bounds x=\\"529\\" y=\\"307\\" width=\\"100\\" height=\\"80\\" />
      </bpmndi:BPMNShape>
    </bpmndi:BPMNPlane>
  </bpmndi:BPMNDiagram>
</bpmn:definitions>
",
}
`;

exports[`BPMEngine User can define his own method for generation of resource ids 1`] = `
BPMEngine {
  "clock": Clock {
    "interval": 100,
    "onTick": [Function],
    "status": "paused",
  },
  "evalCondition": [Function],
  "generateId": [Function],
  "onTick": [Function],
  "persist": MemoryPersist {
    "processInstance": Object {
      "create": [Function],
      "find": [Function],
      "update": [Function],
    },
    "store": Object {},
    "task": Object {
      "create": [Function],
      "find": [Function],
    },
    "timer": Object {
      "create": [Function],
      "find": [Function],
      "getNext": [Function],
      "update": [Function],
    },
    "tokenInstance": Object {
      "create": [Function],
      "find": [Function],
      "update": [Function],
    },
    "workflowDefinition": Object {
      "create": [Function],
      "find": [Function],
      "update": [Function],
    },
  },
  "plugins": Object {
    "element": Object {},
    "serviceTask": Object {},
    "userTask": Object {},
  },
}
`;

exports[`BPMEngine User can define his own method for validation of conditions 1`] = `
BPMEngine {
  "clock": Clock {
    "interval": 100,
    "onTick": [Function],
    "status": "paused",
  },
  "evalCondition": [Function],
  "generateId": [Function],
  "onTick": [Function],
  "persist": MemoryPersist {
    "processInstance": Object {
      "create": [Function],
      "find": [Function],
      "update": [Function],
    },
    "store": Object {},
    "task": Object {
      "create": [Function],
      "find": [Function],
    },
    "timer": Object {
      "create": [Function],
      "find": [Function],
      "getNext": [Function],
      "update": [Function],
    },
    "tokenInstance": Object {
      "create": [Function],
      "find": [Function],
      "update": [Function],
    },
    "workflowDefinition": Object {
      "create": [Function],
      "find": [Function],
      "update": [Function],
    },
  },
  "plugins": Object {
    "element": Object {},
    "serviceTask": Object {},
    "userTask": Object {},
  },
}
`;

exports[`BPMEngine User can define his own persistance methods 1`] = `
BPMEngine {
  "clock": Clock {
    "interval": 100,
    "onTick": [Function],
    "status": "paused",
  },
  "evalCondition": [Function],
  "generateId": [Function],
  "onTick": [Function],
  "persist": Object {},
  "plugins": Object {
    "element": Object {},
    "serviceTask": Object {},
    "userTask": Object {},
  },
}
`;
